<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>Popoory67</title>
 <link href="https://popoory67.github.io//ko/atom.xml" rel="self"/>
 <link href="https://popoory67.github.io//ko/"/>
 <updated>2024-03-22T10:47:00+00:00</updated>
 <id>https://popoory67.github.io/</id>
 <author>
   <name>popoory67</name>
   <email>bozeury@gmail.com</email>
 </author>

 
 <entry>
   <title>1. Jekyll에 대해서</title>
   <link href="https://popoory67.github.io//ko/jekyll/2024-03-22-about-jekyll/"/>
   <updated>2024-03-22T00:00:00+00:00</updated>
   <id>https://popoory67.github.io//jekyll/Jekyll(1).ko</id>
   <content type="html">&lt;p&gt;Jekyll을 시작하는 사용자들은 블로그나 나만의 웹 사이트를 만들기 위해 사용할 것이라고 생각합니다.&lt;/p&gt;

&lt;p&gt;그렇다면 Jekyll이 무엇이길래 웹 사이트를 만드는 데에 사용하는 걸까요?&lt;/p&gt;

&lt;h2 id=&quot;jekyll&quot;&gt;&lt;strong&gt;Jekyll&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://jekyllrb.com&quot;&gt;Jekyll&lt;/a&gt;은 &lt;strong&gt;정적 웹 사이트&lt;/strong&gt;를 구성하는 파일을 생성하는 프레임워크입니다.
Ruby 언어로 개발되었으며, 내가 정의한 형식에 맞게 자동으로 생성해줍니다.&lt;/p&gt;

&lt;p&gt;여기서 &lt;em&gt;자동으로 생성해준다는 것&lt;/em&gt;이 어떤 의미인지 상황을 가정하여 설명하겠습니다.&lt;/p&gt;

&lt;h3 id=&quot;1-예시&quot;&gt;1) 예시&lt;/h3&gt;
&lt;p&gt;예를 들면, 아래와 같이 A, B, C라는 웹 페이지가 있습니다.
&lt;img src=&quot;/assets/images/jekyll/image7.jpg&quot; alt=&quot;Alt text&quot; /&gt;
A, B, C는 생김새는 같지만, 색상이 다릅니다.&lt;/p&gt;

&lt;p&gt;html 방식으로 설명하자면, html 구성은 같지만 데이터만 다른 경우입니다.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;html은 이미지, 텍스트와 같은 컨텐츠가 어느 위치에 어떤 모양으로 배치가 되어있는지 적혀있는 &lt;strong&gt;텍스트 파일&lt;/strong&gt;입니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;이를 텍스트로 표현하면 아래와 같습니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt; A Contents &lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt; B Contents &lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt; C Contents &lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;이 내용을 분석하면 이렇습니다.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;“&amp;lt;html&amp;gt; &amp;lt;/html&amp;gt;“이 반복된다.&lt;/li&gt;
  &lt;li&gt;“Contents”는 다르다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;즉, html을 작성할 때 마다 &amp;lt;html&amp;gt; &amp;lt;/html&amp;gt;을 매번 입력해줘야 하는 불편한 상황입니다.&lt;/p&gt;

&lt;p&gt;하지만 Jekyll을 사용한다면 그럴 필요가 없습니다.&lt;/p&gt;

&lt;h3 id=&quot;2-jekyll의-역할&quot;&gt;2) Jekyll의 역할&lt;/h3&gt;
&lt;p&gt;Jekyll은 html을 생성해주는 작업을 합니다.&lt;/p&gt;

&lt;p&gt;웹 페이지의 뼈대가 되는 html, 컨텐츠를 구성하는 markdown으로 분리하여 파일을 관리합니다.
&lt;img src=&quot;/assets/images/jekyll/image8.jpg&quot; alt=&quot;Alt text&quot; /&gt;
그리고 빌드라는 과정으로 웹 페이지를 만들어냅니다.&lt;/p&gt;

&lt;p&gt;Jekyll이 html을 생성해주는 것은 편한 것은 알겠습니다.
그런데 왜 이런 과정이 필요한 걸까요?&lt;/p&gt;

&lt;p&gt;쉽게 설명하기 위해서, 동적 웹 사이트에 대해 간략하게 설명하겠습니다.&lt;/p&gt;

&lt;h2 id=&quot;동적-웹-사이트&quot;&gt;&lt;strong&gt;동적 웹 사이트&lt;/strong&gt;&lt;/h2&gt;
&lt;h3 id=&quot;1-동적-웹-사이트-방식&quot;&gt;1) 동적 웹 사이트 방식&lt;/h3&gt;
&lt;p&gt;Google, Amazon 등 우리가 알고 있는 웹 사이트들은 &lt;em&gt;서버에서&lt;/em&gt; html을 생성하여 사람들에게 보여줍니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jekyll/image1.jpg&quot; alt=&quot;Alt text&quot; /&gt;
이를 동적 웹 사이트 방식이라고 합니다.&lt;/p&gt;

&lt;h3 id=&quot;2-예시&quot;&gt;2) 예시&lt;/h3&gt;
&lt;p&gt;이해를 돕기 위해 일반적인 상황을 가정해보겠습니다.&lt;/p&gt;

&lt;p&gt;예를 들면, 어떤 사용자가 Apple이라는 단어를 검색했습니다.
&lt;img src=&quot;/assets/images/jekyll/image2.jpg&quot; alt=&quot;Alt text&quot; /&gt;&lt;/p&gt;

&lt;p&gt;그러면 서버는 Apple이라는 정보를 가지고 있는 웹 사이트들을 찾습니다.
그리고 사용자의 모니터에 Apple 검색 결과를 보여줍니다.
&lt;img src=&quot;/assets/images/jekyll/image3.jpg&quot; alt=&quot;Alt text&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이 과정에서 서버는 아래와 같이 세 단계의 작업을 합니다.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Apple 데이터를 찾는다.&lt;/li&gt;
  &lt;li&gt;Apple 데이터를 삽입한 html 파일을 생성한다.&lt;/li&gt;
  &lt;li&gt;사용자의 화면에 html을 표시합니다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;이것이 동적으로 웹 사이트를 표시하는 과정입니다.&lt;/p&gt;

&lt;h2 id=&quot;웹-사이트를-운영하는-방법&quot;&gt;&lt;strong&gt;웹 사이트를 운영하는 방법&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;앞서 서버로 html을 생성하는 방식을 설명했지만, 웹 사이트를 운영하는 데에 &lt;em&gt;반드시&lt;/em&gt; 서버가 필요할까요?&lt;/p&gt;

&lt;p&gt;그렇지는 않습니다.&lt;/p&gt;

&lt;p&gt;웹 사이트의 핵심은 &lt;em&gt;html을 열어보는 것&lt;/em&gt;입니다.
&lt;img src=&quot;/assets/images/jekyll/image4.jpg&quot; alt=&quot;Alt text&quot; /&gt;&lt;/p&gt;

&lt;p&gt;그렇다면 html 파일을 &lt;em&gt;저장소&lt;/em&gt;에 업로드하고, 다른 사람이 그것을 다운로드해서 봐도 되지 않을까요?
&lt;img src=&quot;/assets/images/jekyll/image5.jpg&quot; alt=&quot;Alt text&quot; /&gt;&lt;/p&gt;

&lt;p&gt;네, 가능합니다.&lt;/p&gt;

&lt;p&gt;이와 같이 html을 저장소에 업로드하여 운영하는 방식을 &lt;strong&gt;정적 웹 사이트&lt;/strong&gt;라고 합니다.&lt;/p&gt;

&lt;h2 id=&quot;정적-웹-사이트&quot;&gt;&lt;strong&gt;정적 웹 사이트&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;정적 웹 사이트는 웹 사이트를 구성하는 &lt;strong&gt;모든&lt;/strong&gt; html를 미리 생성합니다. 그리고 저장소에 html들을 업로드하여 다른 사람에게 보여주는 방식입니다.
&lt;img src=&quot;/assets/images/jekyll/image6.jpg&quot; alt=&quot;Alt text&quot; /&gt;&lt;/p&gt;

&lt;p&gt;그래서 동적 방식에 비해 html을 생성하는 과정이 없고, 그만큼 빠르다는 장점이 있습니다.&lt;/p&gt;

&lt;p&gt;하지만 동적 웹 사이트처럼 웹 사이트를 만들어주는 시스템은 없습니다.
그래서 &lt;strong&gt;모든 html을 사전에 만들어야 놓아야 합니다.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;그래서 저장해야하는 html의 양이 많고, 중복되는 html 내용도 많습니다.
html을 작성하는 입장에서는 동일한 작업을 매번 계속해야 하므로 작업이 매우 비효율적입니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;장점&lt;br /&gt;
1) 실시간으로 html 생성하는 과정이 필요없다.&lt;br /&gt;
2) 웹 페이지 표시 속도가 빠르다.&lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;단점&lt;br /&gt;
1) 모든 웹 페이지의 html을 전부 만들어야 한다.&lt;br /&gt;
2) 저장해야 하는 html의 양이 많다.&lt;br /&gt;
3) 동일한 html의 내용을 매번 작성해야 한다.&lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;html 내용이 중복이 된다면, 중복되는 내용을 재사용하도록 시스템을 만들면 해결될 것 같습니다.&lt;/p&gt;

&lt;p&gt;정말 다행스럽게도 이미 자동으로 만들어주는 프레임워크들이 존재하는데, 대표적으로 우리가 사용하려는 &lt;strong&gt;Jekyll&lt;/strong&gt;이 있습니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Jekyll은 html을 생성해주는 작업을 합니다.&lt;/p&gt;

  &lt;p&gt;웹 페이지의 뼈대가 되는 html, 컨텐츠를 구성하는 markdown으로 분리하여 파일을 관리합니다.
&lt;img src=&quot;/assets/images/jekyll/image8.jpg&quot; alt=&quot;Alt text&quot; /&gt;
그리고 빌드라는 과정으로 웹 페이지를 만들어냅니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;결과적으로, 우리는 정적 웹 사이트를 더 쉽고 편하게 구성하기 위해서 Jekyll을 사용하는 것입니다.&lt;/p&gt;

&lt;h2 id=&quot;글을-마치며&quot;&gt;&lt;em&gt;글을 마치며…&lt;/em&gt;&lt;/h2&gt;
&lt;p&gt;개인 블로그를 운영할 때 Jekyll을 사용한다는 이야기를 들었습니다.
하지만 Jekyll이 무엇이고 왜 사용하는지는 바로 이해하기가 어려웠습니다.&lt;/p&gt;

&lt;p&gt;그래서 쉽게 이해를 돕기 위해서 이 글을 적기 시작했습니다.
Jekyll의 목적을 이해하는 것이 목표이기 때문에 기술적인 내용은 최대한 배제했습니다.&lt;/p&gt;

&lt;div class=&quot;message&quot;&gt;
사실, 웹 페이지를 구성하기 위해 필요한 것들이 정말 많습니다.&lt;br /&gt;
html 외에도 script, css, 애셋 등등 다양한 리소스들이 있습니다.&lt;br /&gt;
동적 웹 사이트도 로직과 구조가 훨씬 더 복잡하지만, 쉽게 설명하기 위해서 기술적인 내용은 제거했습니다.&lt;br /&gt;
&lt;br /&gt;
부디 혼동이 없으시길 바랍니다.
&lt;/div&gt;

&lt;p&gt;Jekyll에 대해 자세한 내용, 작동 원리, 파일 구조와 같은 내용들은 아래 링크를 참고 부탁드립니다.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://jekyllrb-ko.github.io/&quot;&gt;Jekyll 한국어&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</content>
 </entry>
 

</feed>
